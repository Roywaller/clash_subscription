name: Fetch Clash Subscription

on:
  schedule:
    - cron: '*/5 * * * *'  # 每5分钟运行一次
  watch:
    types: 
      - started  # 当有人star这个仓库时触发

jobs:
  fetch-clash-subscription:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          # 移除缓存配置，避免查找锁文件
          
      - name: Create package.json and install dependencies
        run: |
          # 生成package.json文件
          echo '{"name":"clash-fetcher","version":"1.0.0"}' > package.json
          # 安装axios
          npm install axios

      - name: Fetch and extract subscription link
        id: extract-link
        run: |
          echo "Fetching README.md..."
          wget -O README.md https://raw.githubusercontent.com/abshare/abshare.github.io/refs/heads/main/README.md || {
            echo "Failed to download README.md"
            exit 1
          }
          
          echo "Extracting subscription link..."
          LINK=$(grep -A 5 ">🚀免费Clash订阅链接" README.md | grep -Eo 'https:/[^"]+' | head -n 1 | sed 's|https:/|https://|')

          if [ -z "$LINK" ]; then
            echo "Failed to find the subscription link."
            exit 1
          fi

          echo "Found subscription link: $LINK"
          echo "LINK=$LINK" >> $GITHUB_ENV
          echo "::set-output name=link::$LINK"

      - name: Download subscription content
        run: |
          node -e "
          const axios = require('axios');
          const fs = require('fs');
          const url = process.env.LINK;
          
          console.log('Downloading from:', url);
          
          axios.get(url, { 
            responseType: 'text',
            headers: {
              'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
            }
          })
            .then(response => {
              if (response.status === 200) {
                // 尝试解码Base64
                let content = response.data;
                try {
                  if (/^[A-Za-z0-9+/=]+$/.test(content.trim())) {
                    content = Buffer.from(content, 'base64').toString('utf8');
                    console.log('Successfully decoded Base64 content');
                  }
                } catch (e) {
                  console.log('Content is not Base64 encoded or decoding failed');
                }
                
                fs.writeFileSync('clash_subscription.txt', content);
                console.log('Subscription content saved to clash_subscription.txt');
              } else {
                console.error('Download failed with status code:', response.status);
                process.exit(1);
              }
            })
            .catch(error => {
              console.error('Error downloading subscription:', error.message);
              if (error.response) {
                console.error('Response status:', error.response.status);
                console.error('Response data:', error.response.data);
              }
              process.exit(1);
            });
          "          
        env:
          LINK: ${{ env.LINK }}

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet clash_subscription.txt; then
            echo "No changes to subscription"
            echo "CHANGED=false" >> $GITHUB_ENV
          else
            echo "Subscription has changed"
            echo "CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Commit and push changes
        if: env.CHANGED == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add clash_subscription.txt
          git commit -m "Update clash subscription at $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git push "https://${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main
        env:
          MY_PERSONAL_ACCESS_TOKEN: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}
