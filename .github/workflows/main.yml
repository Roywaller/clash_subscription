name: Fetch Clash Subscription

on:
  schedule:
    - cron: '*/5 * * * *'  # 每5分钟运行一次
  watch:
    types: 
      - started  # 当有人 star 这个仓库时触发

jobs:
  fetch-clash-subscription:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # 可以根据需要更改版本

      - name: Install dependencies
        run: |
          npm install axios

      - name: Fetch README.md content
        run: |
          # 下载 README.md 文件
          wget -O README.md https://raw.githubusercontent.com/abshare/abshare.github.io/refs/heads/main/README.md
          
          # 输出 README.md 的内容以调试
          echo "Content of README.md:"
          cat README.md
          
          # 提取链接并修复格式
          LINK=$(grep -A 5 ">🚀免费Clash订阅链接" README.md | grep -Eo 'https:/[^"]+' | head -n 1 | sed 's|https:/|https://|')

          # 检查链接是否为空
          if [ -z "$LINK" ]; then
            echo "Failed to find the download link."
            exit 1
          fi

          # 输出提取的链接
          echo "Download link is: $LINK"

      - name: Download using Node.js
        run: |
          node -e "
          const axios = require('axios');
          const fs = require('fs');

          const url = process.env.LINK;
          
          axios.get(url, { responseType: 'arraybuffer' })
            .then(response => {
              if (response.status === 200) {
                fs.writeFileSync('clash_subscription.txt', response.data);
                console.log('Downloaded content saved to clash_subscription.txt');
              } else {
                console.error('Failed to download content. Status code:', response.status);
                process.exit(1);
              }
            })
            .catch(error => {
              console.error('Error occurred while downloading:', error.message);
              process.exit(1);
            });
          "          
        env:
          LINK: ${{ steps.fetch-clash-subscription.outputs.LINK }}

      - name: Output subscription content
        run: |
          cat clash_subscription.txt
